[
  {
    "type": "impl",
    "name": "ContractImpl",
    "interface_name": "dojo::contract::contract::IContract"
  },
  {
    "type": "struct",
    "name": "core::byte_array::ByteArray",
    "members": [
      {
        "name": "data",
        "type": "core::array::Array::<core::bytes_31::bytes31>"
      },
      {
        "name": "pending_word",
        "type": "core::felt252"
      },
      {
        "name": "pending_word_len",
        "type": "core::integer::u32"
      }
    ]
  },
  {
    "type": "interface",
    "name": "dojo::contract::contract::IContract",
    "items": [
      {
        "type": "function",
        "name": "name",
        "inputs": [],
        "outputs": [
          {
            "type": "core::byte_array::ByteArray"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "namespace",
        "inputs": [],
        "outputs": [
          {
            "type": "core::byte_array::ByteArray"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "tag",
        "inputs": [],
        "outputs": [
          {
            "type": "core::byte_array::ByteArray"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "name_hash",
        "inputs": [],
        "outputs": [
          {
            "type": "core::felt252"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "namespace_hash",
        "inputs": [],
        "outputs": [
          {
            "type": "core::felt252"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "selector",
        "inputs": [],
        "outputs": [
          {
            "type": "core::felt252"
          }
        ],
        "state_mutability": "view"
      }
    ]
  },
  {
    "type": "impl",
    "name": "WorldProviderImpl",
    "interface_name": "dojo::world::world_contract::IWorldProvider"
  },
  {
    "type": "struct",
    "name": "dojo::world::world_contract::IWorldDispatcher",
    "members": [
      {
        "name": "contract_address",
        "type": "core::starknet::contract_address::ContractAddress"
      }
    ]
  },
  {
    "type": "interface",
    "name": "dojo::world::world_contract::IWorldProvider",
    "items": [
      {
        "type": "function",
        "name": "world",
        "inputs": [],
        "outputs": [
          {
            "type": "dojo::world::world_contract::IWorldDispatcher"
          }
        ],
        "state_mutability": "view"
      }
    ]
  },
  {
    "type": "impl",
    "name": "LootSurvivorInitializerImpl",
    "interface_name": "tournament::ls15_components::tests::loot_survivor_mock::ILootSurvivorMockInit"
  },
  {
    "type": "interface",
    "name": "tournament::ls15_components::tests::loot_survivor_mock::ILootSurvivorMockInit",
    "items": [
      {
        "type": "function",
        "name": "initializer",
        "inputs": [
          {
            "name": "name",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "symbol",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "base_uri",
            "type": "core::byte_array::ByteArray"
          },
          {
            "name": "eth_address",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "lords_address",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "pragma_address",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "impl",
    "name": "IDojoInitImpl",
    "interface_name": "tournament::ls15_components::tests::loot_survivor_mock::loot_survivor_mock::IDojoInit"
  },
  {
    "type": "interface",
    "name": "tournament::ls15_components::tests::loot_survivor_mock::loot_survivor_mock::IDojoInit",
    "items": [
      {
        "type": "function",
        "name": "dojo_init",
        "inputs": [],
        "outputs": [],
        "state_mutability": "view"
      }
    ]
  },
  {
    "type": "impl",
    "name": "UpgradableImpl",
    "interface_name": "dojo::contract::upgradeable::IUpgradeable"
  },
  {
    "type": "interface",
    "name": "dojo::contract::upgradeable::IUpgradeable",
    "items": [
      {
        "type": "function",
        "name": "upgrade",
        "inputs": [
          {
            "name": "new_class_hash",
            "type": "core::starknet::class_hash::ClassHash"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      }
    ]
  },
  {
    "type": "impl",
    "name": "LootSurvivorImpl",
    "interface_name": "tournament::ls15_components::loot_survivor::ILootSurvivor"
  },
  {
    "type": "struct",
    "name": "tournament::ls15_components::loot_survivor::Stats",
    "members": [
      {
        "name": "strength",
        "type": "core::integer::u8"
      },
      {
        "name": "dexterity",
        "type": "core::integer::u8"
      },
      {
        "name": "vitality",
        "type": "core::integer::u8"
      },
      {
        "name": "intelligence",
        "type": "core::integer::u8"
      },
      {
        "name": "wisdom",
        "type": "core::integer::u8"
      },
      {
        "name": "charisma",
        "type": "core::integer::u8"
      },
      {
        "name": "luck",
        "type": "core::integer::u8"
      }
    ]
  },
  {
    "type": "struct",
    "name": "tournament::ls15_components::loot_survivor::Item",
    "members": [
      {
        "name": "id",
        "type": "core::integer::u8"
      },
      {
        "name": "xp",
        "type": "core::integer::u16"
      }
    ]
  },
  {
    "type": "struct",
    "name": "tournament::ls15_components::loot_survivor::Equipment",
    "members": [
      {
        "name": "weapon",
        "type": "tournament::ls15_components::loot_survivor::Item"
      },
      {
        "name": "chest",
        "type": "tournament::ls15_components::loot_survivor::Item"
      },
      {
        "name": "head",
        "type": "tournament::ls15_components::loot_survivor::Item"
      },
      {
        "name": "waist",
        "type": "tournament::ls15_components::loot_survivor::Item"
      },
      {
        "name": "foot",
        "type": "tournament::ls15_components::loot_survivor::Item"
      },
      {
        "name": "hand",
        "type": "tournament::ls15_components::loot_survivor::Item"
      },
      {
        "name": "neck",
        "type": "tournament::ls15_components::loot_survivor::Item"
      },
      {
        "name": "ring",
        "type": "tournament::ls15_components::loot_survivor::Item"
      }
    ]
  },
  {
    "type": "enum",
    "name": "core::bool",
    "variants": [
      {
        "name": "False",
        "type": "()"
      },
      {
        "name": "True",
        "type": "()"
      }
    ]
  },
  {
    "type": "struct",
    "name": "tournament::ls15_components::loot_survivor::Adventurer",
    "members": [
      {
        "name": "health",
        "type": "core::integer::u16"
      },
      {
        "name": "xp",
        "type": "core::integer::u16"
      },
      {
        "name": "gold",
        "type": "core::integer::u16"
      },
      {
        "name": "beast_health",
        "type": "core::integer::u16"
      },
      {
        "name": "stat_upgrades_available",
        "type": "core::integer::u8"
      },
      {
        "name": "stats",
        "type": "tournament::ls15_components::loot_survivor::Stats"
      },
      {
        "name": "equipment",
        "type": "tournament::ls15_components::loot_survivor::Equipment"
      },
      {
        "name": "battle_action_count",
        "type": "core::integer::u8"
      },
      {
        "name": "mutated",
        "type": "core::bool"
      },
      {
        "name": "awaiting_item_specials",
        "type": "core::bool"
      }
    ]
  },
  {
    "type": "struct",
    "name": "tournament::ls15_components::loot_survivor::AdventurerMetadata",
    "members": [
      {
        "name": "birth_date",
        "type": "core::integer::u64"
      },
      {
        "name": "death_date",
        "type": "core::integer::u64"
      },
      {
        "name": "level_seed",
        "type": "core::integer::u64"
      },
      {
        "name": "item_specials_seed",
        "type": "core::integer::u16"
      },
      {
        "name": "rank_at_death",
        "type": "core::integer::u8"
      },
      {
        "name": "delay_stat_reveal",
        "type": "core::bool"
      },
      {
        "name": "golden_token_id",
        "type": "core::integer::u8"
      }
    ]
  },
  {
    "type": "struct",
    "name": "tournament::ls15_components::loot_survivor::Bag",
    "members": [
      {
        "name": "item_1",
        "type": "tournament::ls15_components::loot_survivor::Item"
      },
      {
        "name": "item_2",
        "type": "tournament::ls15_components::loot_survivor::Item"
      },
      {
        "name": "item_3",
        "type": "tournament::ls15_components::loot_survivor::Item"
      },
      {
        "name": "item_4",
        "type": "tournament::ls15_components::loot_survivor::Item"
      },
      {
        "name": "item_5",
        "type": "tournament::ls15_components::loot_survivor::Item"
      },
      {
        "name": "item_6",
        "type": "tournament::ls15_components::loot_survivor::Item"
      },
      {
        "name": "item_7",
        "type": "tournament::ls15_components::loot_survivor::Item"
      },
      {
        "name": "item_8",
        "type": "tournament::ls15_components::loot_survivor::Item"
      },
      {
        "name": "item_9",
        "type": "tournament::ls15_components::loot_survivor::Item"
      },
      {
        "name": "item_10",
        "type": "tournament::ls15_components::loot_survivor::Item"
      },
      {
        "name": "item_11",
        "type": "tournament::ls15_components::loot_survivor::Item"
      },
      {
        "name": "item_12",
        "type": "tournament::ls15_components::loot_survivor::Item"
      },
      {
        "name": "item_13",
        "type": "tournament::ls15_components::loot_survivor::Item"
      },
      {
        "name": "item_14",
        "type": "tournament::ls15_components::loot_survivor::Item"
      },
      {
        "name": "item_15",
        "type": "tournament::ls15_components::loot_survivor::Item"
      },
      {
        "name": "mutated",
        "type": "core::bool"
      }
    ]
  },
  {
    "type": "interface",
    "name": "tournament::ls15_components::loot_survivor::ILootSurvivor",
    "items": [
      {
        "type": "function",
        "name": "get_adventurer",
        "inputs": [
          {
            "name": "adventurer_id",
            "type": "core::felt252"
          }
        ],
        "outputs": [
          {
            "type": "tournament::ls15_components::loot_survivor::Adventurer"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_adventurer_meta",
        "inputs": [
          {
            "name": "adventurer_id",
            "type": "core::felt252"
          }
        ],
        "outputs": [
          {
            "type": "tournament::ls15_components::loot_survivor::AdventurerMetadata"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_bag",
        "inputs": [
          {
            "name": "adventurer_id",
            "type": "core::felt252"
          }
        ],
        "outputs": [
          {
            "type": "tournament::ls15_components::loot_survivor::Bag"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "get_cost_to_play",
        "inputs": [],
        "outputs": [
          {
            "type": "core::integer::u128"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "new_game",
        "inputs": [
          {
            "name": "client_reward_address",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "weapon",
            "type": "core::integer::u8"
          },
          {
            "name": "name",
            "type": "core::felt252"
          },
          {
            "name": "golden_token_id",
            "type": "core::integer::u8"
          },
          {
            "name": "delay_reveal",
            "type": "core::bool"
          },
          {
            "name": "custom_renderer",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "launch_tournament_winner_token_id",
            "type": "core::integer::u128"
          },
          {
            "name": "mint_to",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::felt252"
          }
        ],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "set_adventurer",
        "inputs": [
          {
            "name": "adventurer_id",
            "type": "core::felt252"
          },
          {
            "name": "adventurer",
            "type": "tournament::ls15_components::loot_survivor::Adventurer"
          }
        ],
        "outputs": [],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "set_bag",
        "inputs": [
          {
            "name": "adventurer_id",
            "type": "core::felt252"
          },
          {
            "name": "bag",
            "type": "tournament::ls15_components::loot_survivor::Bag"
          }
        ],
        "outputs": [],
        "state_mutability": "view"
      }
    ]
  },
  {
    "type": "impl",
    "name": "ERC721MixinImpl",
    "interface_name": "openzeppelin_token::erc721::interface::ERC721ABI"
  },
  {
    "type": "struct",
    "name": "core::integer::u256",
    "members": [
      {
        "name": "low",
        "type": "core::integer::u128"
      },
      {
        "name": "high",
        "type": "core::integer::u128"
      }
    ]
  },
  {
    "type": "struct",
    "name": "core::array::Span::<core::felt252>",
    "members": [
      {
        "name": "snapshot",
        "type": "@core::array::Array::<core::felt252>"
      }
    ]
  },
  {
    "type": "interface",
    "name": "openzeppelin_token::erc721::interface::ERC721ABI",
    "items": [
      {
        "type": "function",
        "name": "balance_of",
        "inputs": [
          {
            "name": "account",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "owner_of",
        "inputs": [
          {
            "name": "token_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "safe_transfer_from",
        "inputs": [
          {
            "name": "from",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "to",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "token_id",
            "type": "core::integer::u256"
          },
          {
            "name": "data",
            "type": "core::array::Span::<core::felt252>"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "transfer_from",
        "inputs": [
          {
            "name": "from",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "to",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "token_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "approve",
        "inputs": [
          {
            "name": "to",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "token_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "set_approval_for_all",
        "inputs": [
          {
            "name": "operator",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "approved",
            "type": "core::bool"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "get_approved",
        "inputs": [
          {
            "name": "token_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "is_approved_for_all",
        "inputs": [
          {
            "name": "owner",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "operator",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "supports_interface",
        "inputs": [
          {
            "name": "interface_id",
            "type": "core::felt252"
          }
        ],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "_name",
        "inputs": [],
        "outputs": [
          {
            "type": "core::byte_array::ByteArray"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "symbol",
        "inputs": [],
        "outputs": [
          {
            "type": "core::byte_array::ByteArray"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "token_uri",
        "inputs": [
          {
            "name": "token_id",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [
          {
            "type": "core::byte_array::ByteArray"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "balanceOf",
        "inputs": [
          {
            "name": "account",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::integer::u256"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "ownerOf",
        "inputs": [
          {
            "name": "tokenId",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "safeTransferFrom",
        "inputs": [
          {
            "name": "from",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "to",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "tokenId",
            "type": "core::integer::u256"
          },
          {
            "name": "data",
            "type": "core::array::Span::<core::felt252>"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "transferFrom",
        "inputs": [
          {
            "name": "from",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "to",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "tokenId",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "setApprovalForAll",
        "inputs": [
          {
            "name": "operator",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "approved",
            "type": "core::bool"
          }
        ],
        "outputs": [],
        "state_mutability": "external"
      },
      {
        "type": "function",
        "name": "getApproved",
        "inputs": [
          {
            "name": "tokenId",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [
          {
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "isApprovedForAll",
        "inputs": [
          {
            "name": "owner",
            "type": "core::starknet::contract_address::ContractAddress"
          },
          {
            "name": "operator",
            "type": "core::starknet::contract_address::ContractAddress"
          }
        ],
        "outputs": [
          {
            "type": "core::bool"
          }
        ],
        "state_mutability": "view"
      },
      {
        "type": "function",
        "name": "tokenURI",
        "inputs": [
          {
            "name": "tokenId",
            "type": "core::integer::u256"
          }
        ],
        "outputs": [
          {
            "type": "core::byte_array::ByteArray"
          }
        ],
        "state_mutability": "view"
      }
    ]
  },
  {
    "type": "event",
    "name": "dojo::contract::upgradeable::upgradeable::Upgraded",
    "kind": "struct",
    "members": [
      {
        "name": "class_hash",
        "type": "core::starknet::class_hash::ClassHash",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "dojo::contract::upgradeable::upgradeable::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "Upgraded",
        "type": "dojo::contract::upgradeable::upgradeable::Upgraded",
        "kind": "nested"
      }
    ]
  },
  {
    "type": "event",
    "name": "tournament::ls15_components::loot_survivor::loot_survivor_component::Event",
    "kind": "enum",
    "variants": []
  },
  {
    "type": "event",
    "name": "openzeppelin_introspection::src5::SRC5Component::Event",
    "kind": "enum",
    "variants": []
  },
  {
    "type": "event",
    "name": "openzeppelin_token::erc721::erc721::ERC721Component::Transfer",
    "kind": "struct",
    "members": [
      {
        "name": "from",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "to",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "token_id",
        "type": "core::integer::u256",
        "kind": "key"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_token::erc721::erc721::ERC721Component::Approval",
    "kind": "struct",
    "members": [
      {
        "name": "owner",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "approved",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "token_id",
        "type": "core::integer::u256",
        "kind": "key"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_token::erc721::erc721::ERC721Component::ApprovalForAll",
    "kind": "struct",
    "members": [
      {
        "name": "owner",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "operator",
        "type": "core::starknet::contract_address::ContractAddress",
        "kind": "key"
      },
      {
        "name": "approved",
        "type": "core::bool",
        "kind": "data"
      }
    ]
  },
  {
    "type": "event",
    "name": "openzeppelin_token::erc721::erc721::ERC721Component::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "Transfer",
        "type": "openzeppelin_token::erc721::erc721::ERC721Component::Transfer",
        "kind": "nested"
      },
      {
        "name": "Approval",
        "type": "openzeppelin_token::erc721::erc721::ERC721Component::Approval",
        "kind": "nested"
      },
      {
        "name": "ApprovalForAll",
        "type": "openzeppelin_token::erc721::erc721::ERC721Component::ApprovalForAll",
        "kind": "nested"
      }
    ]
  },
  {
    "type": "event",
    "name": "tournament::ls15_components::tests::loot_survivor_mock::loot_survivor_mock::Event",
    "kind": "enum",
    "variants": [
      {
        "name": "UpgradeableEvent",
        "type": "dojo::contract::upgradeable::upgradeable::Event",
        "kind": "nested"
      },
      {
        "name": "LootSurvivorEvent",
        "type": "tournament::ls15_components::loot_survivor::loot_survivor_component::Event",
        "kind": "flat"
      },
      {
        "name": "SRC5Event",
        "type": "openzeppelin_introspection::src5::SRC5Component::Event",
        "kind": "flat"
      },
      {
        "name": "ERC721Event",
        "type": "openzeppelin_token::erc721::erc721::ERC721Component::Event",
        "kind": "flat"
      }
    ]
  }
]